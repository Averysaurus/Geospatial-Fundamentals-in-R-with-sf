sfhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
getwd()
setwd('..')
getwd()
sfhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
# Take a look at first 5 rows and a few of the columns
sfhomes[1:5,c("YearBuilt","totvalue","AreaSquareFeet","Neighborhood",
"NumBedrooms")]
class(sfhomes)            # what is the data object type?
class(sfhomes)            # what is the data object type?
dim(sfhomes)              # how many rows and columns
str(sfhomes)              # display the structure of the object
head(sfhomes)             # take a look at the first 10 records
summary(sfhomes)          # explore the range of values
summary(sfhomes$totvalue) # explore the range of values for one column
hist(sfhomes$totvalue)    # histogram for the totvalue column
plot(sfhomes$lon, sfhomes$lat) # using base plot function
library(ggplot2)
ggplot() + geom_point(data=sfhomes, aes(lon,lat))
ggplot() + geom_point(data=sfhomes, aes(lon,lat), size=1) + coord_map()
ggplot() + geom_point(data=sfhomes, aes(lon,lat, col=totvalue)) +
coord_map()
ggplot() + geom_point(data=sfhomes, aes(lon,lat, size=totvalue)) +
coord_map()
ggplot() + geom_point(data=sfhomes, aes(lon,lat, col=totvalue)) +
coord_map()
sfhomes_low2high <- sfhomes[order(sfhomes$totvalue, decreasing = FALSE),]
ggplot() +
geom_point(data=sfhomes_low2high, aes(lon,lat, col=totvalue)) +
coord_map()
sfhomes_high2low <- sfhomes[order(sfhomes$totvalue, decreasing = T),]
ggplot() + geom_point(data=sfhomes_high2low, aes(lon,lat, col=totvalue)) +
coord_map()
sfhomes2010_15 <- subset(sfhomes_low2high, as.numeric(SalesYear) > 2009)
ggplot() +
geom_point(aes(lon, lat, col=totvalue), data = sfhomes2010_15 )  +
facet_wrap(~ SalesYear)
library(ggmap)
#ggmap key that will be deleted after the workshop
my_gkey <- "AIzaSyBws8es7WgI5hXpFM2w2YUYylDoocZyBxw"
register_google(my_gkey)
?get_map
sf_center_point <- c(lon=-122.445144, lat=37.769335 )
sf_map <- get_map(sf_center_point)
sf_map
ggmap(sf_map)
ggmap(sf_map) +
geom_point(data=sfhomes, aes(x=lon, y=lat, col=totvalue))
?get_map
# Get the center point of the data
sf_ctr <- c(lon = mean(sfhomes$lon), lat = mean(sfhomes$lat))
sf_ctr  # take a look
# create the map - setting the zoom level to 12
sf_basemap <- get_map(sf_ctr, source="stamen",
maptype="toner-lite", zoom=12)
sf_basemap
ggmap(sf_basemap) +
geom_point(data=sfhomes, aes(x=lon, y=lat, col=totvalue))
bart <- read.csv("./data/bart.csv")
# take a look
head (bart)
sfhomes15 <- subset(sfhomes, as.numeric(SalesYear) == 2015)
sfmap_with_bart <- ggplot() +
geom_point(data=sfhomes15, aes(x=lon, y=lat))  +
geom_point(data=bart, aes(x=X,y=Y), col="red", size=3)
x = 5
x
sfmap_with_bart
map(sf_basemap)
sfmap_with_bart <- ggmap(sf_basemap) +
geom_point(data=sfhomes15, aes(x=lon, y=lat))  +
geom_point(data=bart, aes(x=X,y=Y), col="red", size=3)
sfmap_with_bart
?get_map
# create the map - setting the zoom level to 12
sf_basemap <- get_map(sf_ctr, source="osm",
maptype="watercolor", zoom=12)
# create the map - setting the zoom level to 12
sf_basemap <- get_map(sf_ctr, source="stamen",
maptype="watercolor", zoom=12)
ggmap(sf_basemap) +
geom_point(data=sfhomes, aes(x=lon, y=lat, col=totvalue))
landmarks <- read.csv("./data/landmarks.csv")
head(landmarks)
sfmap_bart_landmarks <- ggplot() +
geom_point(data=sfhomes15, aes(x=lon, y=lat))  +
geom_point(data=bart, aes(x=X,y=Y), col="red", size=3) +
geom_point(data=landmarks, aes(x=X,y=Y), shape=22,
col="black", fill="grey", size=4)
sfmap_bart_landmarks
library(dplyr)
library(sf)
tracts = st_read(dsn = './data', layer = 'sftracts')
#the object displays a compact summary, when its name is called
tracts
#the object is of both the 'sf' and 'data.frame' classes
class(tracts)
#it has a number of columns (i.e. attributes, fields), including a geometry column
str(tracts)
#we can use basic data.frame functions on it
nrow(tracts)
ncol(tracts)
colnames(tracts)
head(tracts)
plot(tracts)
plot(sfhomes)
plot(iris
)
plot(tracts)
#read in a shapefile of SF census tracts
plot(tracts['NAME'])
plot(tracts$NAME)
class(tracts['NAME'])
class(tracts[, 'NAME'])
class(subset(tracts, select='NAME'))
class(tracts$NAME)
iris[, 'Species']
iris['Species']
tracts$geometry
tracts$STATEFP
tracts$geometry
st_crs(tracts)
bbox = st_bbox(tracts)
bbox
bbox$xmin
class(tracts$geometry)
tracts$geometry[[1]]
class(tracts$geometry[[1]])
#create a point
pnt = st_point(c(2, 4))
#create a multipoint
mpnt = st_multipoint(rbind(c(2, 2), c(3, 3), c(3, 2)))
#create a line
line = st_linestring(rbind(c(0, 3), c(1, 4), c(2, 3)))
#create a polygon
poly = st_polygon(list(rbind(c(1, 0), c(3, 4), c(5, 1), c(1, 0))))
plot(poly, col = 'yellow')
plot(line, col = 'blue', lwd = 3, add = T)
plot(mpnt, col = 'red', add = T)
plot(pnt, col = 'black', add = T)
geom = tracts$geometry[[1]]
str(geom)
geom[[1]]
df = data.frame(list('name' = c('someplace'), 'pop' = c(2)))
df
df
poly
st_sfc(poly)
new_sf = st_sf(df, geometry = st_sfc(poly))
new_sf
plot(new_sf)
ggplot() + geom_sf(data = tracts) +
geom_point(data = sfhomes15, aes(lon, lat, col = totvalue))
st_crs(tracts)
st_crs(tracts)
st_crs(sfhomes15, n = 1)
sfhomes15_sf = st_as_sf(sfhomes15, coords = c('lon', 'lat'), crs = 4326)
st_crs(sfhomes15_sf)
st_crs(sfhomes15_sf)
st_transform(tracts, crs = 4326)
st_transform(tracts, crs = st_crs(sfhomes15_sf))
