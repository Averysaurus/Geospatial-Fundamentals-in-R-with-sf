setwd("~/Desktop/stuff/berk/dlab/Geospatial-Fundamentals-in-R-with-sf/docs")
setwd("~/Desktop/stuff/berk/dlab/Geospatial-Fundamentals-in-R-with-sf")
SFhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
# Take a look at first 5 rows and a few of the columns
SFhomes[1:5,c("YearBuilt","totvalue","AreaSquareFeet","Neighborhood",
"NumBedrooms")]
class(SFhomes)            # what is the data object type?
dim(SFhomes)              # how many rows and columns
class(SFhomes)            # what is the data object type?
dim(SFhomes)              # how many rows and columns
str(SFhomes)              # display the structure of the object
SFhomes$SalesYear
head(SFhomes)             # take a look at the first 10 records
summary(SFhomes)          # explore the range of values
summary(SFhomes$totvalue) # explore the range of values for one column
hist(SFhomes$totvalue)    # histogram for the totvalue column
str(SFhomes)
plot(SFhomes$lon, SFhomes$lat) # using base plot function
bart <- read.csv("./data/bart.csv")
# take a look
head(bart)
SFhomes15 <- subset(SFhomes, as.numeric(SalesYear) == 2015)
plot(SFhomes15$lon, SFhomes15$lat)
points(bart$X, bart$Y, col='red')
landmarks <- read.csv("./data/landmarks.csv")
head(landmarks)
plot(SFhomes$lon, SFhomes$lat)
points(bart$X, bart$Y, col='red')
points(landmarks$X, landmarks$Y, col='green')
library(sf)
?st_read
tracts = st_read(dsn = './data', layer = 'sftracts')
#the object displays a compact summary, when its name is called
tracts
class(tracts)
str(tracts)
head(tracts)
nrow(tracts)
colnames(tracts)
head(tracts, 4)
plot(tracts)
#read in a shapefile of SF census tracts
plot(tracts['NAME'])
class(tracts['NAME'])
class(tracts[, 'NAME'])
class(subset(tracts, select='NAME'))
class(tracts$NAME)
function(1, 3, 4, 5
mean(1,2,4,
)))))
""""""
tracts$NAME
tracts$geometry
st_crs(tracts)
tracts$geometry[[1]]
class(tracts$geometry)
class (tracts$geometry[[1]])
head(tracts)
plot(tracts)
plot(sf::st_geometry(tracts))
points(SFhomes15$lon, SFhomes15$lat)
st_crs(tracts)
st_crs(SFhomes15)
st_crs("+proj=longlat +ellps=WGS84 +datum=WGS84")
st_crs(4326)
head(SFhomes(
)))
head(SFhomes)
SFhomes15 <- subset(SFhomes, as.numeric(SalesYear) == 2015)
SFhomes15_sf = st_as_sf(SFhomes15, coords = c('lon', 'lat'), crs = 4326)
SFhomes15_sf
SFhomes15
SFhomes15_sf
st_crs(SFhomes15_sf)
st_crs(tracts)
st_transform(tracts, 4326)
tracts
st_transform(tracts, 4326)
tracts_lonlat = st_transform(tracts, crs = st_crs(SFhomes15_sf))
st_crs(SFhomes15_sf) == st_crs(tracts_lonlat)
plot(st_geometry(tracts_lonlat))
plot(st_geometry(SFhomes15_sf), add=TRUE, col='blue')
head(landmarks_sf)
head(landmarks)
colnames(landmarks)
landmarks_sf = st_as_sf(landmarks, coords = c('X', 'Y'), crs = 3857)
SFboundary = st_read(dsn='./data', layer='SFboundary')
SFhighways = st_read('./data', 'SFhighways')
#check the CRS of SFboundary
st_crs(SFboundary) == st_crs(SFhomes15_sf)
#check th CRS of SFhighways
st_crs(SFhighways) == st_crs(SFhomes15_sf)
#it needs to be transformed
SFhighways_lonlat = st_transform(SFhighways, st_crs(SFhomes15_sf))
landmarks_lonlat = st_transform(landmarks_sf, st_crs(SFhomes15_sf))
st_crs(landmarks_lonlat) == st_crs(SFhomes15_sf)
plot(st_geometry(SFboundary), col='white', border='purple')
plot(st_geometry(tracts_lonlat), alpha=0.2, add=T)
plot(st_geometry(SFhighways_lonlat), col='red', add=T)
plot(st_geometry(SFhomes15_sf), col='blue', pch=16, add=T)
plot(st_geometry(landmarks_lonlat), col='green', pch=16, cex=2, add=T)
library(ggplot2)
ggplot() + geom_point(data=SFhomes15, aes(x=lon, y=lat, col=totvalue))
library(tmap)
qtm(SFhomes15_sf)
tmap_mode("view") # set tmap to interactive view mode
qtm(SFhomes15_sf) # Interactive - click on the points
ttm()
ttm()
ttm()
ttm()
ttm()
ttm()
tm_shape(SFhomes15_sf) + tm_dots(col="totvalue", size = 0.25)
ttm()
tm_shape(SFhomes15_sf) + tm_dots(col="totvalue", size = 0.25)
