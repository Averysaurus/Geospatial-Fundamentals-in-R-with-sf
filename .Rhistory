library(units)
SFhomes <- read.csv('data/sf_properties_25ksample_OLD.csv',
stringsAsFactors = FALSE)
SFhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
setwd("~/Desktop/stuff/berk/dlab/Geospatial-Fundamentals-in-R-with-sf/docs")
SFhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
setwd('..')
SFhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
# Take a look at first 5 rows and a few of the columns
SFhomes[1:5,c("YearBuilt","totvalue","AreaSquareFeet","Neighborhood",
"NumBedrooms")]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath('../'))
# Chunk 5
SFhomes <- read.csv('data/sf_properties_25ksample.csv',
stringsAsFactors = FALSE)
# Take a look at first 5 rows and a few of the columns
SFhomes[1:5,c("YearBuilt","totvalue","AreaSquareFeet","Neighborhood",
"NumBedrooms")]
# Chunk 9
plot(SFhomes$lon, SFhomes$lat, asp=1) # using base plot function
# Chunk 11
plot(SFhomes$lon, SFhomes$lat, asp=1) # using base plot function
# Chunk 12
bart <- read.csv("./data/bart.csv")
# take a look
head (bart)
# Chunk 13
SFhomes15 <- subset(SFhomes, as.numeric(SalesYear) == 2015)
# Chunk 15
plot(SFhomes$lon, SFhomes$lat, asp=1)
points(bart$X, bart$Y, col='red')
# Chunk 16
landmarks <- read.csv("./data/landmarks.csv")
head(landmarks)
# Chunk 18
plot(SFhomes$lon, SFhomes$lat, asp=1)
points(bart$X, bart$Y, col='red')
points(landmarks$X, landmarks$Y, col='green')
# Chunk 19
head(bart)
head(landmarks)
# Chunk 20
par(mfrow=c(1,2))
plot(SFhomes$lon, SFhomes$lat,
xlab="longitude",
ylab="latitude",
main="homes CRS",
asp=1)
plot(landmarks$X, landmarks$Y, col='green',
xlab="longitude",
ylab="latitude",
main="landmarks CRS",
asp=1)
par(mfrow=c(1,1))
# Chunk 21
library(sf)
# Chunk 22
dir("data", pattern = "sftracts.")
# Chunk 23
tracts = st_read(dsn = './data', layer = 'sftracts')
# Chunk 24
#the object displays a compact summary, when its name is called
tracts
# Chunk 26
class(tracts)
# Chunk 27
str(tracts)
# Chunk 28
nrow(tracts)
colnames(tracts)
head(tracts, 4)
# Chunk 30
plot(tracts)
# Chunk 31
plot(tracts)
# Chunk 32
#read in a shapefile of SF census tracts
plot(tracts['NAME'])
# Chunk 33
plot(tracts$NAME)
# Chunk 34
class(tracts['NAME'])
class(tracts[, 'NAME'])
class(subset(tracts, select='NAME'))
class(tracts$NAME)
# Chunk 35
head(tracts$NAME)
head(tracts['NAME'])
# Chunk 36
tracts$geometry
# Chunk 37
tracts$geometry
# Chunk 38
st_crs(tracts)
# Chunk 39
class(tracts$geometry)
class (tracts$geometry[[1]])
# Chunk 40
tracts
# Chunk 41
plot(sf::st_geometry(tracts))
points(SFhomes15$lon, SFhomes15$lat)
# Chunk 42
st_crs(tracts)
st_crs(SFhomes15)
# Chunk 43
st_crs(4326)
# Chunk 44
SFhomes15_sf = st_as_sf(SFhomes15, coords = c('lon', 'lat'), crs = 4326)
# Chunk 45
SFhomes15_sf
# Chunk 46
st_crs(SFhomes15_sf)
# Chunk 48
tracts_lonlat = st_transform(tracts, crs = 4326)
# Chunk 49
tracts_lonlat = st_transform(tracts, crs = st_crs(SFhomes15_sf))
# Chunk 50
st_crs(SFhomes15_sf)
st_crs(tracts_lonlat)
st_crs(SFhomes15_sf) == st_crs(tracts_lonlat)
# Chunk 52
plot(st_geometry(tracts_lonlat))
plot(st_geometry(SFhomes15_sf), add=TRUE, col='blue')
# Chunk 53
landmarks_sf = st_as_sf(landmarks, coords = c('X', 'Y'), crs = 3857)
# Chunk 54
SFboundary = st_read('./data', 'SFboundary')
SFhighways = st_read('./data', 'SFhighways')
# Chunk 55
#check the CRS of SFboundary
st_crs(SFboundary) == st_crs(SFhomes15_sf)
# Chunk 56
#check th CRS of SFhighways
st_crs(SFhighways) == st_crs(SFhomes15_sf)
#it needs to be transformed
SFhighways_lonlat = st_transform(SFhighways, st_crs(SFhomes15_sf))
# Chunk 57
landmarks_lonlat = st_transform(landmarks_sf, st_crs(SFhomes15_sf))
# Chunk 59
plot(st_geometry(SFboundary), col='white', border='purple')
plot(st_geometry(tracts_lonlat), alpha=0.2, add=T)
plot(st_geometry(SFhighways_lonlat), col='red', add=T)
plot(st_geometry(SFhomes15_sf), col='blue', pch=16, add=T)
plot(st_geometry(landmarks_lonlat), col='green', pch=16, cex=2, add=T)
# Chunk 60
library(ggplot2)
# Chunk 62
ggplot() + geom_point(data=SFhomes15, aes(x=lon, y=lat, col=totvalue))
# Chunk 63
library(tmap)
# Chunk 64
tmap_mode('plot')
# Chunk 65
qtm(SFhomes15_sf)
# Chunk 67
tmap_mode("view")
qtm(SFhomes15_sf)
# Chunk 68
ttm()
ttm()
ttm()
ttm()
ttm()
# Chunk 70
tm_shape(SFhomes15_sf) + tm_dots(col="totvalue", size = 0.25)
# Chunk 71
tm_shape(tracts) + tm_polygons(col="beige", border.col="red", alpha = 0.4)
# Chunk 72
tm_shape(SFhighways_lonlat) + tm_lines(col="black")
# Chunk 73
# Map the SF Boundary first
overlay_map = tm_shape(SFboundary) +
tm_polygons(col="beige", border.col="black") +
# Overlay the highway lines next
tm_shape(SFhighways_lonlat) +
tm_lines(col="black") +
# Then add the house points
tm_shape(SFhomes15_sf) +
tm_dots(col="totvalue", size=.25)
# Chunk 74
overlay_map
# Chunk 76
overlay_map +
tm_shape(landmarks_lonlat) +
tm_dots(col = 'skyblue', size = 2)
# Chunk 78
overlay_map +
tm_shape(landmarks_sf) +
tm_dots(col = 'skyblue', size = 2)
# Chunk 80
SFhomes15_sf_low2high <- SFhomes15_sf[order(SFhomes15_sf$totvalue, decreasing = FALSE),]
SFhomes15_sf_high2low <- SFhomes15_sf[order(SFhomes15_sf$totvalue, decreasing = TRUE),]
high2low = tm_shape(SFhomes15_sf_high2low) +
tm_dots(col='totvalue', size=1, title='Ordered high to low')
low2high = tm_shape(SFhomes15_sf_low2high) +
tm_dots(col='totvalue', size=1, title='Ordered low to high')
tmap_arrange(high2low, low2high)
# Chunk 82
tm_shape(SFboundary) +
tm_polygons(col="beige", border.col="black") +
tm_shape(SFhighways_lonlat) +
tm_lines(col="black") +
tm_shape(SFhomes15_sf) +
tm_dots(col="totvalue", size=.25,
title = "San Francisco Property Values (2015)") +
tm_layout(inner.margins=c(.05, .2, .15, .05))
# bottom, left, top, right
# Chunk 84
#set mode back to interactive
tmap_mode('view')
tm_shape(SFboundary) +
tm_polygons(col="beige", border.col="black") +
tm_shape(SFhighways_lonlat) +
tm_lines(col="black") +
tm_shape(SFhomes15_sf) +
tm_dots(col="totvalue", size=.05,
title = "San Francisco Property Values (2015)",
popup.vars=c("SalesYear","totvalue","NumBedrooms",
"NumBathrooms","AreaSquareFeet")) +
tm_layout(inner.margins=c(.05, .2, .15, .05)) # bottom, left, top, right
# Chunk 86
tmap_mode('view')
tm_basemap("Stamen.Watercolor") +
tm_shape(SFhomes15_sf) +
tm_dots(col="totvalue", size=.05, title = "San Francisco Property Values (2015)") +
tm_tiles("Stamen.TonerLabels")
# Chunk 87
fav_map <- tmap_last()
# Chunk 88
fav_map
# Chunk 91
plot(st_geometry(SFboundary), col='white', border='purple')
plot(st_geometry(tracts_lonlat), alpha=0.2, add=T)
plot(st_geometry(SFhighways_lonlat), col='red', add=T)
plot(st_geometry(SFhomes15_sf), col='blue', pch=16, add=T)
plot(st_geometry(landmarks_lonlat), col='green', pch=16, cex=2, add=T)
# Chunk 92
challenge_map_2 = tm_shape(SFboundary) +
tm_polygons(border.col = 'purple', alpha = 0) +
tm_shape(tracts_lonlat) +
tm_polygons(col = 'lightgray', border.col = 'darkgray', alpha = 0.3) +
tm_shape(SFhighways_lonlat) +
tm_lines(col = 'red') +
tm_shape(SFhomes15_sf) +
tm_dots(col = 'totvalue', size = 0.25, palette = '-Blues') +
tm_shape(landmarks_sf) +
tm_dots(col = 'green', size = 0.5)
# Chunk 93
tmap_mode('plot')
challenge_map_2 + tm_layout(inner.margins=c(.05, .2, .15, .05))
plot(st_geometry(SFboundary), col='white', border='purple')
plot(st_geometry(tracts_lonlat), alpha=0.2, add=T)
plot(st_geometry(SFhighways_lonlat), col='red', add=T)
plot(st_geometry(SFhomes15_sf), col='blue', pch=16, add=T)
SF_homes15_sf
SFhomes15_sf = st_as_sf(SFhomes15, coords = c('lon', 'lat'), crs = 4326)
SFhomes15
SFhomes15 <- subset(SFhomes, as.numeric(SalesYear) == 2015)
SFhomes15
head(SFhomes)
SFhomes$SalesYear == 2015
